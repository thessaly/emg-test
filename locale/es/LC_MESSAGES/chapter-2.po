# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023
# This file is distributed under the same license as the Project name not
# set package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Project name not set \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-24 10:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

msgid "<mark>Analysis practical</mark>"
msgstr ""

msgid "Ch. 2: Graphing and visually exploring EMG data"
msgstr ""

msgid ""
"**Authors:** Erin McKiernan (1,2), Ana Daniela del Rio Pulido(1), Noel "
"Isaias Plascencia Diaz(1), Mitsui Myrna Salgado Saito(1)        "
"**Affiliation:** (1) Universidad Nacional Autónoma de México (UNAM), (2) "
"Open Research Community Accelerator (ORCA)    **Date:** February 16, 2025"
msgstr ""

msgid "Overview"
msgstr ""

msgid ""
"The objective of this data analysis practical is to graph and explore EMG"
" recordings made from different skeletal muscles during various physical "
"activities. The recordings visualized below can be found in our GitHub "
"repository "
"(<https://github.com/emckiernan/electrophys/tree/master/EMG/EMGbasics/data>),"
" or new recordings can be obtained by performing the experimental "
"practical in [Ch. 1: Muscle physiology and EMG "
"basics](oxa:EPpXta8zJdzN048lz8AR/hZTnTYzQR5EQmCKX51Wj \"Ch. 1: Muscle "
"physiology and EMG  basics \"). The duration of this practical could vary"
" depending on the programming experience of students and the goals of the"
" class. This practical could be carried out in multiple sessions, "
"especially if students are asked to first record EMGs and then graph "
"their own recordings. Or, since this is an analysis practical, it could "
"be done asynchronously as an assigned homework."
msgstr ""

msgid "Setting up the notebook"
msgstr ""

msgid ""
"We begin by setting up the Jupyter notebook and importing the Python "
"modules for plotting figures. We include commands to view plots in the "
"notebook, and to create figures with good resolution and large labels."
msgstr ""

#, python-brace-format, python-format
msgid ""
"# command to view figures in Jupyter notebook\n"
"%matplotlib inline \n"
"\n"
"# import plotting module \n"
"import matplotlib.pyplot as plt \n"
"\n"
"# commands to create high-resolution figures with large labels\n"
"%config InlineBackend.figure_formats = {'png', 'retina'} \n"
"plt.rcParams['axes.labelsize'] = 18 # fontsize for figure labels\n"
"plt.rcParams['axes.titlesize'] = 20 # fontsize for figure titles\n"
"plt.rcParams['font.size'] = 16 # fontsize for figure numbers\n"
"plt.rcParams['lines.linewidth'] = 1.6 # line width for plotting"
msgstr ""

#, python-format
msgid ""
"---------------------------------------------------------------------------"
"\n"
"ModuleNotFoundError                       Traceback (most recent call "
"last)\n"
"Cell In[1], line 2\n"
"      1 # command to view figures in Jupyter notebook\n"
"----> 2 get_ipython().run_line_magic('matplotlib', 'inline')\n"
"      4 # import plotting module \n"
"      5 import matplotlib.pyplot as plt \n"
"\n"
"File "
"~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache"
"\\local-packages\\Python313\\site-"
"packages\\IPython\\core\\interactiveshell.py:2504, in "
"InteractiveShell.run_line_magic(self, magic_name, line, _stack_depth)\n"
"   2502     kwargs['local_ns'] = self.get_local_scope(stack_depth)\n"
"   2503 with self.builtin_trap:\n"
"-> 2504     result = fn(*args, **kwargs)\n"
"   2506 # The code below prevents the output from being displayed\n"
"   2507 # when using magics with decorator @output_can_be_silenced\n"
"   2508 # when the last Python token in the expression is a ';'.\n"
"   2509 if getattr(fn, magic.MAGIC_OUTPUT_CAN_BE_SILENCED, False):\n"
"\n"
"File "
"~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache"
"\\local-packages\\Python313\\site-"
"packages\\IPython\\core\\magics\\pylab.py:103, in "
"PylabMagics.matplotlib(self, line)\n"
"     98     print(\n"
"     99         \"Available matplotlib backends: %s\"\n"
"    100         % _list_matplotlib_backends_and_gui_loops()\n"
"    101     )\n"
"    102 else:\n"
"--> 103     gui, backend = self.shell.enable_matplotlib(args.gui)\n"
"    104     self._show_matplotlib_backend(args.gui, backend)\n"
"\n"
"File "
"~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache"
"\\local-packages\\Python313\\site-"
"packages\\IPython\\core\\interactiveshell.py:3787, in "
"InteractiveShell.enable_matplotlib(self, gui)\n"
"   3784     import matplotlib_inline.backend_inline\n"
"   3786 from IPython.core import pylabtools as pt\n"
"-> 3787 gui, backend = pt.find_gui_and_backend(gui, "
"self.pylab_gui_select)\n"
"   3789 if gui != None:\n"
"   3790     # If we have our first gui selection, store it\n"
"   3791     if self.pylab_gui_select is None:\n"
"\n"
"File "
"~\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.13_qbz5n2kfra8p0\\LocalCache"
"\\local-packages\\Python313\\site-"
"packages\\IPython\\core\\pylabtools.py:338, in find_gui_and_backend(gui, "
"gui_select)\n"
"    321 def find_gui_and_backend(gui=None, gui_select=None):\n"
"    322     \"\"\"Given a gui string return the gui and mpl backend.\n"
"    323 \n"
"    324     Parameters\n"
"   (...)    335     "
"'WXAgg','Qt4Agg','module://matplotlib_inline.backend_inline','agg').\n"
"    336     \"\"\"\n"
"--> 338     import matplotlib\n"
"    340     if _matplotlib_manages_backends():\n"
"    341         backend_registry = "
"matplotlib.backends.registry.backend_registry\n"
"\n"
"ModuleNotFoundError: No module named 'matplotlib'"
msgstr ""

msgid ""
"Next, we import various modules for extracting data and scientific "
"computing."
msgstr ""

msgid ""
"import numpy as np\n"
"import scipy as sc\n"
"import wave"
msgstr ""

msgid ""
"The following cell makes a copy of the necessary data files for this "
"lesson from repository "
"[https://github.com/emckiernan/electrophys/tree/master/EMG/EMGbasics/data](https://github.com/emckiernan/electrophys/tree/master/EMG/EMGbasics/data)"
msgstr ""

#, python-brace-format
msgid ""
"import os\n"
"import requests\n"
"\n"
"# List of exact filenames (as used in the repo and expected locally)\n"
"data_files = [\n"
"    \"S10_EMG_bicep_intermittent.wav\",\n"
"    \"S10_EMG_bicep_recruitment.wav\",\n"
"    \"S10_EMG_calf_intermittent.wav\",\n"
"    \"S1_EMG_tricep_dips.wav\",\n"
"    \"S1_EMG_tricep_twistWeight.wav\",\n"
"    \"S2_EMG_forearm_grip.wav\",\n"
"    \"S2_EMG_forearm_wrestle.wav\",\n"
"    \"S3_EMG_jawMuscle_chewSmile.wav\",\n"
"    \"S5_EMG_abs_legLift3.wav\",\n"
"    \"S5_EMG_abs_plank.wav\",\n"
"    \"S9_EMG_quadricep_oneLegSquat1.wav\",\n"
"    \"S9_EMG_quadricep_squatSustained.wav\"\n"
"]\n"
"\n"
"# GitHub raw download base URL (preserving original filename case)\n"
"base_url = "
"\"https://github.com/emckiernan/electrophys/raw/refs/heads/master/EMG/EMGbasics/data/\""
"\n"
"\n"
"# Local data directory\n"
"target_dir = \"data\"\n"
"os.makedirs(target_dir, exist_ok=True)\n"
"\n"
"# Download files if not already present\n"
"for name in data_files:\n"
"    local_path = os.path.join(target_dir, name)\n"
"    if not os.path.exists(local_path):\n"
"        print(f\"Downloading {name}...\")\n"
"        url = base_url + name\n"
"        response = requests.get(url)\n"
"        if response.status_code == 200:\n"
"            with open(local_path, \"wb\") as f:\n"
"                f.write(response.content)\n"
"        else:\n"
"            print(f\"⚠️ Failed to download {name}: HTTP "
"{response.status_code}\")\n"
msgstr ""

msgid "Extracting and graphing the data"
msgstr ""

msgid ""
"EMG recordings were obtained using the Backyard Brains Muscle SpikerBox, "
"and are saved as audio files in .wav format. So, we first have to open "
"the .wav files and extract the data. We can also extract the number of "
"recording channels and sampling rate."
msgstr ""

#, python-format
msgid ""
"# open .wav file by specifying the path and filename\n"
"record = wave.open('data/S10_EMG_calf_intermittent.wav', 'r')\n"
"\n"
"# extract number of channels, sample rate, data\n"
"numChannels = record.getnchannels() # number of channels\n"
"N = record.getnframes() # humber of frames\n"
"sampleRate = record.getframerate() # sampling rate\n"
"dstr = record.readframes(N * numChannels)\n"
"waveData = np.frombuffer(dstr, np.int16)\n"
"\n"
"# get the time window\n"
"timeEMG=np.linspace(0, len(waveData)/sampleRate, num=len(waveData))\n"
"\n"
"# calculate frequency\n"
"freq = 1/np.mean(np.diff(timeEMG))\n"
"\n"
"print('The recording has %d channel(s).' % (numChannels))\n"
"print('The sampling rate of the recording is %d Hz.' % (sampleRate))"
msgstr ""

msgid ""
"The recording has 1 channel(s).\n"
"The sampling rate of the recording is 44100 Hz.\n"
msgstr ""

msgid ""
"Now, let's plot the EMG. The following recording was made from the calf "
"muscle during repeated calf raises."
msgstr ""

msgid ""
"plt.figure(figsize=(18,6))\n"
"plt.xlabel(r'time (s)')\n"
"plt.ylabel(r'voltage ($\\mu$V)')\n"
"plt.plot(timeEMG,waveData, 'b')\n"
"plt.xlim(0,max(timeEMG));"
msgstr ""

msgid "<Figure size 1800x600 with 1 Axes>"
msgstr ""

msgid ""
"We can define a function to allow us to quickly extract and graph "
"different EMG recordings. The input to the function is the name of the "
"file we want to analyze."
msgstr ""

#, python-format
msgid ""
"def EMG(file):\n"
"    # open .wav file by specifying the path and filename\n"
"    record = wave.open(file)\n"
"    # extract number of channels, sample rate, data\n"
"    numChannels = record.getnchannels() # number of channels\n"
"    N = record.getnframes() # number of frames\n"
"    sampleRate = record.getframerate() # sampling rate\n"
"    # extract data from the .wav file\n"
"    dstr = record.readframes(N * numChannels)\n"
"    waveData = np.frombuffer(dstr, np.int16)\n"
"    # print the number of channels and sample rate\n"
"    print('The recording has %d channel(s).' % (numChannels))\n"
"    print('The sampling rate of the recording is %d Hz.' % (sampleRate))\n"
"    # calculate time window\n"
"    timeEMG=np.linspace(0, len(waveData)/sampleRate, num=len(waveData))\n"
"    # calculate frequency\n"
"    freq = 1/np.mean(np.diff(timeEMG))\n"
"    # plot EMG\n"
"    plt.figure(figsize=(18,6))\n"
"    plt.xlabel(r'time (s)')\n"
"    plt.ylabel(r'voltage ($\\mu$V)')\n"
"    plt.plot(timeEMG,waveData, 'b')\n"
"    plt.xlim(0,max(timeEMG));\n"
"    \n"
"    return"
msgstr ""

msgid "Exploring the activity of different muscles"
msgstr ""

msgid ""
"Using our function, we can now dive into our repository of recordings and"
" look at the EMGs of different muscles recorded during various physical "
"activities."
msgstr ""

msgid "Biceps muscle"
msgstr ""

msgid ""
"The following EMG was recorded from the biceps muscle during repeated (3)"
" contractions with intermittent rest periods."
msgstr ""

msgid "EMG(file='data/S10_EMG_calf_intermittent.wav')"
msgstr ""

msgid ""
"The following EMG was recorded from the biceps as the subject sustained a"
" contraction and gradually increased the amount of force (i.e., "
"recruitment)."
msgstr ""

msgid "Study questions and exercises:"
msgstr ""

msgid ""
"How do the recordings differ when we look at intermittent versus "
"sustained muscle contractions?"
msgstr ""

msgid ""
"Which features of the EMG recording change as the subject increases the "
"force of contraction, and how? In other words, how might we quantify "
"motor unit recruitment?"
msgstr ""

msgid ""
"What other exercises could you carry out while recording from the biceps "
"muscle, and how would you expect the EMG recordings to look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own biceps "
"muscle and then extract and graph your data."
msgstr ""

msgid "Triceps muscle"
msgstr ""

msgid ""
"The following recording was made from the triceps muscle while the "
"subject performed triceps dips."
msgstr ""

msgid "EMG(file='data/S1_EMG_tricep_dips.wav')"
msgstr ""

msgid ""
"This next recording is more complex. It was made from the triceps muscle "
"and included the following sequence of activities: (1) for the first 10 "
"seconds, the subject was at rest, (2) then for the following 10 seconds, "
"the subject turned their arm to activate the triceps isometrically, (3) "
"then the subject changed position, and (4) finally, during the last 20 "
"seconds, the subject repeatedly lifted and lowered a bottle with water "
"inside (i.e., similar to an overhead triceps extension)."
msgstr ""

msgid "EMG(file='data/S1_EMG_tricep_twistWeight.wav')"
msgstr ""

msgid ""
"Why do you think the triceps dip recording shows a high level of "
"continuous activity despite the fact that the dips involve an up-and-down"
" movement?"
msgstr ""

msgid ""
"How is the triceps dip activity different from the repeated triceps "
"extension at the end of the second recording, and why?"
msgstr ""

msgid ""
"What other exercises could you carry out while recording from the triceps"
" muscle, and how would you expect the EMG recordings to look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own triceps "
"muscle and then extract and graph your data."
msgstr ""

msgid "Forearm muscles"
msgstr ""

msgid ""
"The following recording was made from the forearm while the subject "
"repeatedly pressed a hand gripper exercise device. It shows five "
"contractions in total, with the last one sustained for a longer period of"
" time than the previous four."
msgstr ""

msgid "EMG(file='data/S2_EMG_forearm_grip.wav')"
msgstr ""

msgid ""
"The next recording was made from the forearm while the subject "
"participated in an arm wrestling match. Around second 14, the subject "
"lost the match."
msgstr ""

msgid "EMG(file='data/S2_EMG_forearm_wrestle.wav')"
msgstr ""

msgid ""
"What muscles are found in the forearm, and which could be contributing to"
" the EMG signal?"
msgstr ""

msgid ""
"What other muscles, besides those in the forearm, might be activated "
"during an arm wrestling match? Would you expect to see differences in "
"their EMGs during this activity?"
msgstr ""

msgid ""
"What other exercises could you carry out while recording from the forearm"
" muscles, and how would you expect the EMG recordings to look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own forearm "
"and then extract and graph your data."
msgstr ""

msgid "Jaw muscles"
msgstr ""

msgid ""
"The following EMG was recorded from the jaw muscles. For the first 50 "
"seconds, the subject  chewed a soft, gummy candy. Then there were 10 "
"seconds of rest. And finally, for the last ten seconds the subject made a"
" forced smile."
msgstr ""

msgid "EMG(file='data/S3_EMG_jawMuscle_chewSmile.wav')"
msgstr ""

msgid ""
"Which muscles control chewing and smiling, and which could be "
"contributing to the EMG signal?"
msgstr ""

msgid ""
"What differences do you see in the EMGs recorded when the subject is "
"chewing versus smiling, and what do you think causes these differences?"
msgstr ""

msgid ""
"What other activities could you carry out while recording from the jaw or"
" other facial muscles, and how would you expect the EMG recordings to "
"look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own jaw "
"muscles; try experimenting with different electrode placements on the "
"face, and then extract and graph your data"
msgstr ""

msgid "Abdominal muscles"
msgstr ""

msgid ""
"The following EMG recording was made from the abdominal muscles, "
"specifically rectus abdominis, during lying leg raises."
msgstr ""

msgid "EMG(file='data/S5_EMG_abs_legLift3.wav')"
msgstr ""

msgid ""
"The recording has 1 channel(s).\n"
"The sampling rate of the recording is 10000 Hz.\n"
msgstr ""

msgid "During the next recording, the subject performed a sustained plank."
msgstr ""

msgid "EMG(file='data/S5_EMG_abs_plank.wav')"
msgstr ""

msgid ""
"What do you think would happen to the EMG recordings if the subject "
"performed more lying leg raises, or tried to hold the plank for longer? "
"In other words, how might fatigue show up on the two recordings?"
msgstr ""

msgid ""
"How could we quantify fatigue, and how might the quantification be "
"different for the two types of exercise?"
msgstr ""

msgid ""
"What other exercises could you do to activate the abdominal muscles, or "
"which other ab muscles could you record from, and how would you expect "
"the EMG recordings to look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own abdominal"
" muscles, try experimenting with different electrode placements and "
"exercises, and then extract and graph your data."
msgstr ""

msgid "Quadriceps muscles"
msgstr ""

msgid ""
"The following EMG was recorded from the quadriceps muscles while the "
"subject performed a one-legged squat, also known as a Bulgarian squat. "
"The subject also had a backpack filled with books on during the exercise "
"for added weight."
msgstr ""

msgid "EMG(file='data/S9_EMG_quadricep_oneLegSquat1.wav')"
msgstr ""

msgid ""
"In the next recording, the subject sustained a wall squat, maintaining "
"the backpack on top of the legs for added weight."
msgstr ""

msgid "EMG(file='data/S9_EMG_quadricep_squatSustained.wav')"
msgstr ""

msgid ""
"What muscles make up the quadriceps group, and which could be "
"contributing to the EMG signal?"
msgstr ""

msgid ""
"What factors could explain the fluctuations seen in the two recordings? "
"What might have caused the increased amplitude at the end of the wall "
"squat recording?"
msgstr ""

msgid ""
"What other exercises could you perform while recording from the "
"quadriceps muscles, and how would you expect the EMG recordings to look?"
msgstr ""

msgid ""
"If you have recording equipment available, record from your own "
"quadriceps, try experimenting with different electrode placements, and "
"then extract and graph your data."
msgstr ""

msgid ""
"You can explore more recordings from [our "
"repository](https://github.com/emckiernan/electrophys/tree/master/EMG/EMGbasics/data)."
" Or, record your own EMGs and experiment with electrode placement and "
"different exercises to see how it affects the signal."
msgstr ""

